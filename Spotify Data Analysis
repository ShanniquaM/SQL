# For this project, I downloaded Spotify data from Kaggle into Excel.
# Then I created a table to insert Spotify data into in SQLiteStudio.
# Finally, I performed analytics on the data using SQL. 

# Creatiing the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the SpotifyData.csv into the table.

#Next, I explored the data using the following SQL query. 

#Then I determined who the Top 10 artists are by popularity
SELECT track_name, artist_name , popularity
 FROM BIT_DB.Spotifydata
ORDER BY Popularity desc
LIMIT 10

#Then I determined the avg popularity, danceability by artist and track.
SELECT artist_name, track_name, avg(danceability), avg(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name

#I also found out who the top 20 artists are by popularity to expand the information some more.
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY Popularity desc
LIMIT 20

#Finally I decided to find which song by which aritst was the longest amongst the data.
SELECT track_name, artist_name,duration_ms
FROM BIT_DB.Spotifydata
WHERE duration_ms in (SELECT max(duration_ms) FROM BIT_DB.Spotifydata)

#Also finding which song is the shortest amongst the data.
SELECT track_name, artist_name,duration_ms
FROM BIT_DB.Spotifydata
WHERE duration_ms in (SELECT min(duration_ms) FROM BIT_DB.Spotifydata)
